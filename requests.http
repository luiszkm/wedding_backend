# Define variáveis para reutilização
@host = http://localhost:3000
@casamentoId = a1b2c3d4-e5f6-7890-1234-567890abcdef

###
# @name CriarGrupoComSucesso
# Envia uma requisição válida para criar um grupo de convidados
POST {{host}}/v1/casamentos/{{casamentoId}}/grupos-de-convidados
Content-Type: application/json

{
  "chaveDeAcesso": "familia-da-noiva",
  "nomesDosConvidados": ["Maria Eduarda", "Carlos Alberto", "Joana Lima"]
}

###
# @name CriarGrupoComErroDeValidacao
# Envia uma requisição sem a lista de convidados para forçar um erro de validação
POST {{host}}/v1/casamentos/{{casamentoId}}/grupos-de-convidados
Content-Type: application/json

{
  "chaveDeAcesso": "amigos-da-faculdade",
  "nomesDosConvidados": []
}

###

###
# @name ObterGrupoPorChave
# Busca um grupo de convidados usando uma chave de acesso válida.
#
# ANTES de rodar este teste, rode o "CriarGrupoComSucesso" para garantir
# que o grupo com a chave "familia-da-noiva" exista.
GET {{host}}/v1/acesso-convidado?chave=familia-da-noiva

###
# @name ObterGrupoComChaveInexistente
# Tenta buscar um grupo com uma chave que não existe para testar o erro 404.
GET {{host}}/v1/acesso-convidado?chave=chave-que-nao-existe

###

###
# @name SubmeterRSVPemLote
#
# ANTES de rodar:
# 1. Use "CriarGrupoComSucesso" para criar um grupo com a chave "familia-da-noiva".
# 2. Use "ObterGrupoPorChave" com essa chave para pegar os IDs dos convidados.
# 3. Cole os IDs corretos no corpo da requisição abaixo.
POST {{host}}/v1/rsvps
Content-Type: application/json

{
  "chaveDeAcesso": "familia-da-noiva",
  "respostas": [
    { 
      "idConvidado": "51eff69b-fcf7-4cac-b582-86acb996c9b2", 
      "status": "CONFIRMADO" 
    },
    { 
      "idConvidado": "098121dc-1c27-458a-9bc9-893581355ffb", 
      "status": "RECUSADO" 
    }
  ]
}

###

###
# @name EditarGrupoDeConvidados
#
# ANTES de rodar:
# 1. Crie um grupo e pegue seu ID.
# 2. Busque os convidados desse grupo para pegar seus IDs.
# 3. Monte o corpo abaixo para:
#    - Renomear o primeiro convidado.
#    - Manter o segundo convidado.
#    - Adicionar um terceiro convidado novo.
#    - Omitir um convidado antigo para removê-lo.
PUT {{host}}/v1/grupos-de-convidados/674debb2-f24e-407a-970a-a9159d77ea21
Content-Type: application/json

{
  "chaveDeAcesso": "familia-da-noiva",
  "convidados": [
    {
      "id": "51eff69b-fcf7-4cac-b582-86acb996c9b2",
      "nome": "Nome do Convidado 1 (Editado)"
    },
    {
      "id": "098121dc-1c27-458a-9bc9-893581355ffb",
      "nome": "Nome do Convidado 2 (Sem Alteração)"
    }
  ]
}

###